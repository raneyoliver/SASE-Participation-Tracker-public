# env variables
 env:
   POSTGRES_USERNAME: postgres
   POSTGRES_PASSWORD: postgres
   POSTGRES_DB: postgres
   SELENIUM_CONFIG: HEADLESS

 name: CI Tests
 on: push
 jobs:
   tests:
     name: Run Tests
     runs-on: ubuntu-18.04
     # set up postgres
     services:
       postgres:
         image: postgres:latest
         ports:
         - 5432:5432
         env:
           POSTGRES_USERNAME: ${{ env.POSTGRES_USERNAME }}
           POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
     steps:
       # set up node.js and ruby
       - uses: actions/checkout@v1
       - uses: actions/setup-node@v1
         with:
           node-version: 12.18.2
       - uses: actions/setup-ruby@v1
         with:
           ruby-version: 2.6.6
       # make installments
       - 
         name: Install Node Packages
         run: |
           npm i
           npm run build
       - 
         name: Install Postgres Client
         run: sudo apt-get install libpq-dev
       - 
         name: Install Bundler
         run: |
           gem install bundler
           bundler install --jobs 4 --retry 3
       # set up database
       - 
         name: Create database
         run: |
           bundler exec rails db:create RAILS_ENV=test
           bundler exec rails db:migrate RAILS_ENV=test
       # run tests
       - 
         name: Run ESLint Test
         if: always()
         run: npm run lint
       - 
         name: Run Rubocop Test
         if: always()
         run: rubocop
       - 
         name: Run Rspec Test
         if: always()
         run: bundler exec rspec
       -
         name: Get Rspec Coverage Results
         if: always()
         run: |
           COVERAGE=$(tr '\n' ' ' < coverage/index.html | grep -Eoi '<span class=\"covered_percent\>.*%(\s*)</span>(\s*)</span>' | grep -Eoi '[0-9]+.[0-9]+')
           MAX=100.0
           echo "${COVERAGE}"
           if (( $(echo "$COVERAGE < $MAX" |bc -l) )); then
             exit 1
           fi
       # upload results
       - 
         name: Upload Rspec Coverage Results    
         uses: actions/upload-artifact@master
         if: always()
         with:
           name: rspec-coverage-report
           path: coverage
       - 
         name: Run Cucumber Test
         if: always()
         run: |
           export SELENIUM_CONFIG="HEADLESS"
           bundler exec cucumber
       -
         name: Get Cucumber Coverage Results
         if: always()
         run: |
           COVERAGE=$(tr '\n' ' ' < coverage/index.html | grep -Eoi '<span class=\"covered_percent\>.*%(\s*)</span>(\s*)</span>' | grep -Eoi '[0-9]+.[0-9]+')
           MAX=100.0
           echo "${COVERAGE}"
           if (( $(echo "$COVERAGE < $MAX" |bc -l) )); then
             exit 1
           fi
       # upload results
       - 
         name: Upload Cucumber Coverage Results    
         uses: actions/upload-artifact@master
         if: always()
         with:
           name: cucumber-coverage-report
           path: coverage
